// <auto-generated />
using System;
using CarbonTrackerApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace CarbonTrackerApi.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250614234240_EdificioCidadeColumn")]
    partial class EdificioCidadeColumn
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CarbonTrackerApi.Models.Edificio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("CIDADE");

                    b.Property<string>("Endereco")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("NVARCHAR2(500)")
                        .HasColumnName("ENDERECO");

                    b.Property<string>("Latitude")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LATITUDE");

                    b.Property<string>("Longitude")
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("LONGITUDE");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("NOME");

                    b.Property<string>("TipoEdificio")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("TIPOEDIFICIO");

                    b.HasKey("Id");

                    b.ToTable("EDIFICIOS");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.FatorEmissao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AnoVigencia")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("ANOVIGENCIA");

                    b.Property<string>("Regiao")
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("REGIAO");

                    b.Property<string>("TipoEnergia")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPOENERGIA");

                    b.Property<string>("UnidadeEmissao")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("UNIDADEEMISSAO");

                    b.Property<decimal>("ValorFator")
                        .HasColumnType("decimal(10,6)")
                        .HasColumnName("VALORFATOR");

                    b.HasKey("Id");

                    b.ToTable("FATORESEMISSAO");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MedicaoEnergia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("ConsumoValor")
                        .HasColumnType("decimal(18,4)")
                        .HasColumnName("CONSUMOVALOR");

                    b.Property<int>("MedidorEnergiaId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("MEDIDORENERGIAID");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("TIMESTAMP(7) WITH TIME ZONE")
                        .HasColumnName("TIMESTAMP");

                    b.Property<string>("UnidadeMedida")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("NVARCHAR2(20)")
                        .HasColumnName("UNIDADEMEDIDA");

                    b.HasKey("Id");

                    b.HasIndex("MedidorEnergiaId");

                    b.ToTable("MEDICOESENERGIA");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MedidorEnergia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EdificioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EDIFICIOID");

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("LOCALIZACAO");

                    b.Property<string>("NumeroSerie")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("NUMEROSERIE");

                    b.Property<string>("TipoMedidor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("TIPOMEDIDOR");

                    b.HasKey("Id");

                    b.HasIndex("EdificioId");

                    b.HasIndex("NumeroSerie")
                        .IsUnique();

                    b.ToTable("MEDIDORESENERGIA");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MetaCarbono", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnoBase")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANOBASE");

                    b.Property<int>("AnoMeta")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ANOMETA");

                    b.Property<DateTime>("DataCriacao")
                        .HasColumnType("TIMESTAMP(7)")
                        .HasColumnName("DATACRIACAO");

                    b.Property<int>("EdificioId")
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("EDIFICIOID");

                    b.Property<decimal>("ReducaoPercentual")
                        .HasColumnType("decimal(5,4)")
                        .HasColumnName("REDUCAOPERCENTUAL");

                    b.HasKey("Id");

                    b.HasIndex("EdificioId");

                    b.ToTable("METASCARBONO");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)")
                        .HasColumnName("ID");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)")
                        .HasColumnName("EMAIL");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("NVARCHAR2(255)")
                        .HasColumnName("PASSWORDHASH");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("ROLE");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("NVARCHAR2(50)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("USUARIOS");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MedicaoEnergia", b =>
                {
                    b.HasOne("CarbonTrackerApi.Models.MedidorEnergia", "MedidorEnergia")
                        .WithMany("Medicoes")
                        .HasForeignKey("MedidorEnergiaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MedidorEnergia");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MedidorEnergia", b =>
                {
                    b.HasOne("CarbonTrackerApi.Models.Edificio", "Edificio")
                        .WithMany("Medidores")
                        .HasForeignKey("EdificioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edificio");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MetaCarbono", b =>
                {
                    b.HasOne("CarbonTrackerApi.Models.Edificio", "Edificio")
                        .WithMany("MetasCarbono")
                        .HasForeignKey("EdificioId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edificio");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.Edificio", b =>
                {
                    b.Navigation("Medidores");

                    b.Navigation("MetasCarbono");
                });

            modelBuilder.Entity("CarbonTrackerApi.Models.MedidorEnergia", b =>
                {
                    b.Navigation("Medicoes");
                });
#pragma warning restore 612, 618
        }
    }
}
